{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_groupCoordinator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "groupName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "groupBuyInAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "groupCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "groupBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupActivationTime",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Esusu.Group",
          "name": "_group",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cbalance",
          "type": "uint256"
        }
      ],
      "name": "createGroupEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "userBalance",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Esusu.EsusuUser",
          "name": "_userProfile",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_userCreationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cbalance",
          "type": "uint256"
        }
      ],
      "name": "createUserProfileEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "groupName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "groupBuyInAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "groupCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "groupBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupActivationTime",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Esusu.Group",
          "name": "_group",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_groupActivationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cbalance",
          "type": "uint256"
        }
      ],
      "name": "groupActivationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_groupMember",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "groupName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "groupBuyInAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "groupCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "groupBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupActivationTime",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Esusu.Group",
          "name": "_group",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cbalance",
          "type": "uint256"
        }
      ],
      "name": "newGroupMemberEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "groupName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "groupBuyInAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "groupCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "groupBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupActivationTime",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Esusu.Group",
          "name": "_group",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nextPaymentDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextPaymentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastPaymentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "completedDonationRounds",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct Esusu.GroupMember",
          "name": "_groupMember",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_paymentAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_paymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cbalance",
          "type": "uint256"
        }
      ],
      "name": "payGroupMemberEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "userBalance",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct Esusu.EsusuUser",
          "name": "_user",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_withdrawalTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cbalance",
          "type": "uint256"
        }
      ],
      "name": "userWithdrawalEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        }
      ],
      "name": "activateGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "groupName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "groupBuyInAmount",
          "type": "uint256"
        }
      ],
      "name": "createGroup",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createUserProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        }
      ],
      "name": "getGroupbyId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "groupName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "groupBuyInAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "groupCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "groupBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupActivationTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct Esusu.Group",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nextPaymentDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextPaymentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastPaymentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "completedDonationRounds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct Esusu.GroupMember[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "groupName",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "groupBuyInAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "groupCoordinator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "groupBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "groupActivationTime",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Esusu.Group",
              "name": "group",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "donationRound",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "donationStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "donationEndTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "latePaymentStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "latePaymentEndTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct Esusu.GroupDonation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserGroups",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "groupName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "groupBuyInAmount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "groupCoordinator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "groupBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupActivationTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct Esusu.Group[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserProfile",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "userBalance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Esusu.EsusuUser",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "groupCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "groupList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "groupName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "groupBuyInAmount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "groupCoordinator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "groupBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "groupActivationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        }
      ],
      "name": "joinGroup",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationRound",
          "type": "uint256"
        }
      ],
      "name": "lateDonation",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        }
      ],
      "name": "payGroupMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "groupId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationRound",
          "type": "uint256"
        }
      ],
      "name": "userDonation",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userList",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "userBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userWithdrawal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5d4252123fff345f307b0f869318c5b7eb6609e8240eac5bd94d78ed8d51b5e4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "4594465",
    "logsBloom": "0x
    "blockHash": "0x4b402d9d1058b51700e17286284a9647636fdf876fdbb57626652be133c335cf",
    "transactionHash": "0x5d4252123fff345f307b0f869318c5b7eb6609e8240eac5bd94d78ed8d51b5e4",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "4594465",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a0e14bdfbdce8e1682c0fc3a3bd29d11",
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_groupCoordinator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Esusu.Group\",\"name\":\"_group\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cbalance\",\"type\":\"uint256\"}],\"name\":\"createGroupEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Esusu.EsusuUser\",\"name\":\"_userProfile\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_userCreationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cbalance\",\"type\":\"uint256\"}],\"name\":\"createUserProfileEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Esusu.Group\",\"name\":\"_group\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_groupActivationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cbalance\",\"type\":\"uint256\"}],\"name\":\"groupActivationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_groupMember\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Esusu.Group\",\"name\":\"_group\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cbalance\",\"type\":\"uint256\"}],\"name\":\"newGroupMemberEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Esusu.Group\",\"name\":\"_group\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nextPaymentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextPaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"completedDonationRounds\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct Esusu.GroupMember\",\"name\":\"_groupMember\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_paymentAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_paymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cbalance\",\"type\":\"uint256\"}],\"name\":\"payGroupMemberEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct Esusu.EsusuUser\",\"name\":\"_user\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_withdrawalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cbalance\",\"type\":\"uint256\"}],\"name\":\"userWithdrawalEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"activateGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"}],\"name\":\"createGroup\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createUserProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"getGroupbyId\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Esusu.Group\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nextPaymentDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextPaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"completedDonationRounds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct Esusu.GroupMember[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Esusu.Group\",\"name\":\"group\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"donationRound\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latePaymentStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latePaymentEndTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Esusu.GroupDonation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserGroups\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Esusu.Group[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"internalType\":\"struct Esusu.EsusuUser\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"groupCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"groupList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"groupBuyInAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"groupCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupActivationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"joinGroup\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationRound\",\"type\":\"uint256\"}],\"name\":\"lateDonation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"}],\"name\":\"payGroupMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationRound\",\"type\":\"uint256\"}],\"name\":\"userDonation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userList\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userWithdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/esusu.sol\":\"Esusu\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/esusu.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.7.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\ncontract Esusu {\\r\\n\\r\\n\\r\\n    // VARIABLES\\r\\n\\r\\n    // track the groupcount and userCount\\r\\n    uint public groupCount = 0;\\r\\n    uint public userCount = 0;\\r\\n\\r\\n    // create a list of groups and users\\r\\n    Group[]public groupList;\\r\\n    EsusuUser[] public userList;\\r\\n\\r\\n    // create the admin (owner)\\r\\n    struct AdminOwner {\\r\\n        address payable adminAddress;\\r\\n        uint adminBalance;\\r\\n        uint adminNextPaymentAmount;\\r\\n    }\\r\\n\\r\\n    // create a user\\r\\n    struct EsusuUser {\\r\\n        address payable userAddress;\\r\\n        uint userBalance;\\r\\n    }\\r\\n\\r\\n    // create a groupMember\\r\\n    struct GroupMember {\\r\\n        address payable userAddress;\\r\\n        uint nextPaymentDate;\\r\\n        uint nextPaymentAmount;\\r\\n        uint lastPaymentAmount;\\r\\n        uint[] completedDonationRounds;\\r\\n    }\\r\\n\\r\\n    // create a group\\r\\n    struct Group {\\r\\n        uint id;\\r\\n        string groupName;\\r\\n        uint groupBuyInAmount;\\r\\n        address payable groupCoordinator;\\r\\n        uint groupBalance;\\r\\n        uint groupActivationTime;\\r\\n    }\\r\\n\\r\\n    // create a donation\\r\\n    struct GroupDonation {\\r\\n        Group group;\\r\\n        uint donationRound;\\r\\n        uint donationStartTime;\\r\\n        uint donationEndTime;\\r\\n        uint latePaymentStartTime;\\r\\n        uint latePaymentEndTime;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    // CONSTRUCTOR WITH MAPPING OF ADDRESS TO ADMIN\\r\\n\\r\\n    // mapping between groupId and donation rounds\\r\\n    mapping (uint => GroupDonation[]) groupDonations;\\r\\n\\r\\n    // create a mapping between groups and groupmembers (name)\\r\\n    mapping (string => GroupMember[]) groupinfo;\\r\\n\\r\\n    // create a mapping between groups and groupmembers (id)\\r\\n    mapping (uint => GroupMember[]) groupinfo_i;\\r\\n\\r\\n    // mapping between group id and list of groupmembers\\r\\n    mapping (uint => GroupMember[]) groupMemberDict;\\r\\n\\r\\n    // mapping between group index and group\\r\\n    mapping (uint => Group) groupDict;\\r\\n\\r\\n    // mapping between address and groupmembers\\r\\n    mapping (address => Group[]) userGroups;\\r\\n\\r\\n    // mapping between user profile and user address\\r\\n    mapping (address => EsusuUser) userProfile;\\r\\n\\r\\n\\r\\n    // EVENTS\\r\\n    event createGroupEvent(address _groupCoordinator, Group _group, uint cbalance);\\r\\n    event newGroupMemberEvent(address _groupMember, Group _group, uint cbalance);\\r\\n    event groupActivationEvent(Group _group, uint _groupActivationTime, uint cbalance);\\r\\n    event payGroupMemberEvent(Group _group, GroupMember _groupMember, uint _paymentAmount, uint _paymentTime, uint cbalance);\\r\\n    event userWithdrawalEvent(EsusuUser _user, uint _withdrawalAmount, uint _withdrawalTime, uint cbalance);\\r\\n    event createUserProfileEvent(address _userAddress, EsusuUser _userProfile, uint _userCreationTime, uint cbalance);\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // FUNCTIONS\\r\\n\\r\\n    // function to get a user profile\\r\\n    function getUserProfile() public view returns(EsusuUser memory) {\\r\\n        require(userProfile[msg.sender].userAddress == msg.sender, \\\"Create an EsusuUser account to view profile\\\");\\r\\n        \\r\\n        EsusuUser storage userprofile = userProfile[msg.sender];\\r\\n        return userprofile;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to get a user's droups\\r\\n    function getUserGroups() public view returns(Group[] memory) {\\r\\n        require(userProfile[msg.sender].userAddress == msg.sender, \\\"Create an EsusuUser account to access this functionality\\\");\\r\\n\\r\\n        Group[] storage usergroups = userGroups[msg.sender];\\r\\n        return usergroups;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to create a user profile\\r\\n    function createUserProfile() public {\\r\\n\\r\\n        require(userProfile[msg.sender].userAddress != msg.sender, \\\"You are already a user\\\");\\r\\n\\r\\n        EsusuUser memory userprofile = EsusuUser(payable(msg.sender), 0);\\r\\n        userList.push(userprofile);\\r\\n        userCount += 1;\\r\\n        userProfile[msg.sender] = userprofile;\\r\\n\\r\\n\\r\\n        // subscribe to events\\r\\n        emit createUserProfileEvent(msg.sender, userprofile, block.timestamp, address(this).balance);\\r\\n    }\\r\\n\\r\\n\\r\\n    // function to create a group\\r\\n    function createGroup(string memory groupName, uint groupBuyInAmount) payable public {\\r\\n\\r\\n        // validate (...??how do i get buyinamount == msg.value??)\\r\\n        require(groupBuyInAmount >= 5, \\\"error\\\" );\\r\\n        require(msg.value >= 5 ether, \\\"ether error\\\");\\r\\n        require(userProfile[msg.sender].userAddress == msg.sender, \\\"Create an EsusuUser account to create a group\\\");\\r\\n        \\r\\n        // create a group by paying in\\r\\n        if(!payable(msg.sender).send(groupBuyInAmount)) {\\r\\n            revert(\\\"Unable to transfer buyIn funds\\\");\\r\\n        }\\r\\n\\r\\n        // increase group count\\r\\n        groupCount += 1;\\r\\n\\r\\n        // create a groupMember object\\r\\n        uint[] memory groupMemberDonations;\\r\\n        GroupMember memory groupMember = GroupMember(payable(msg.sender), 0, 0, 0, groupMemberDonations);\\r\\n\\r\\n        // create the group object\\r\\n        Group storage group = groupDict[groupCount];\\r\\n        groupMemberDict[groupCount].push(groupMember);\\r\\n        \\r\\n        group.id = groupCount;\\r\\n        group.groupName = groupName;\\r\\n        group.groupBuyInAmount = groupBuyInAmount;\\r\\n        group.groupCoordinator = payable(msg.sender);\\r\\n        group.groupBalance = groupBuyInAmount;\\r\\n        group.groupActivationTime = 0;\\r\\n\\r\\n        // add to the list of groups\\r\\n        groupList.push(group);\\r\\n\\r\\n        // add the group to the user's groups\\r\\n        userGroups[msg.sender].push(group);\\r\\n\\r\\n        // add groupmember to group\\r\\n        groupinfo[group.groupName].push(groupMember);\\r\\n        groupinfo_i[groupCount].push(groupMember);\\r\\n\\r\\n        // subscribe to the events\\r\\n        emit createGroupEvent(group.groupCoordinator, group, address(this).balance);\\r\\n        emit newGroupMemberEvent(msg.sender, group, address(this).balance);\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to get a group by the group id\\r\\n    function getGroupbyId(uint groupId)  public view returns(Group memory, GroupMember[] memory, GroupDonation[] memory) {\\r\\n\\r\\n        require(userProfile[msg.sender].userAddress == msg.sender, \\\"You have to be an EsusuUser to get this information\\\");\\r\\n\\r\\n        // returns the group info and members in the group\\r\\n        Group storage group = groupDict[groupId];\\r\\n        GroupMember[] storage groupMembers = groupinfo_i[groupId];\\r\\n        GroupDonation[] storage groupdonations = groupDonations[groupId];\\r\\n        return (group, groupMembers, groupdonations);\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to join a group\\r\\n    function joinGroup(uint groupId) payable public {\\r\\n\\r\\n        require(userProfile[msg.sender].userAddress == msg.sender, \\\"Create an EsusuUser account to join a group\\\");\\r\\n\\r\\n        // get the group \\r\\n        Group storage group = groupDict[groupId];\\r\\n\\r\\n        // validate group buyin amount\\r\\n        require(msg.value >= 5 ether);\\r\\n\\r\\n        // get the number of members in the group\\r\\n        GroupMember[] storage groupMembers = groupinfo_i[groupId];\\r\\n        if (groupMembers.length >= 6) {\\r\\n            revert(\\\"Sorry, this group is maxed out\\\");\\r\\n        }\\r\\n\\r\\n        for (uint i=0; i<groupMembers.length; i++) {\\r\\n            if (groupMembers[i].userAddress == msg.sender) {\\r\\n                revert(\\\"User already belongs to this group\\\");\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // validate payment\\r\\n        if(!payable(msg.sender).send(group.groupBuyInAmount)) {\\r\\n            revert(\\\"Unable to transfer buyIn funds\\\");\\r\\n        }\\r\\n\\r\\n        // create a groupMember profile\\r\\n        uint[] memory groupMemberDonations;\\r\\n        GroupMember memory groupMember = GroupMember(payable(msg.sender), 0, 0, 0, groupMemberDonations);\\r\\n\\r\\n        // add the group to the user's groups\\r\\n        userGroups[msg.sender].push(group);\\r\\n\\r\\n        // add groupmember to group\\r\\n        groupinfo[group.groupName].push(groupMember);\\r\\n        groupinfo_i[groupCount].push(groupMember);\\r\\n\\r\\n        // increase the balance in the group\\r\\n        group.groupBalance += group.groupBuyInAmount;\\r\\n\\r\\n        // subscribe to events\\r\\n        emit newGroupMemberEvent(msg.sender, group, address(this).balance);\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to activate group and store member payout amounts and dates\\r\\n    function activateGroup(uint groupId) public {\\r\\n\\r\\n        // get the group and groupmembers\\r\\n        Group storage group = groupDict[groupId];\\r\\n        GroupMember[] storage groupMembers = groupinfo_i[groupId];\\r\\n\\r\\n        // validate\\r\\n        if (msg.sender != group.groupCoordinator) {\\r\\n            revert(\\\"You are not the coordinator of this group\\\");\\r\\n        }\\r\\n\\r\\n        if (groupMembers.length != 6) {\\r\\n            revert(\\\"The group is incomplete\\\");\\r\\n        }\\r\\n\\r\\n        if (group.groupActivationTime != 0) {\\r\\n            revert(\\\"This group is already active\\\");\\r\\n        }\\r\\n\\r\\n        // set group activation time\\r\\n        group.groupActivationTime = block.timestamp;\\r\\n        emit groupActivationEvent(group, group.groupActivationTime, address(this).balance);\\r\\n\\r\\n        // set the current donation round\\r\\n        uint donationRound = 2;\\r\\n        // set a pointer for donation rounds algorithm\\r\\n        uint donationRoundsTimer = group.groupActivationTime;\\r\\n\\r\\n        // set the group donation rounds\\r\\n        for (uint j=1; j<groupMembers.length; j++) {\\r\\n            // create GroupDonation\\r\\n            uint donationRoundStartTime = donationRoundsTimer;\\r\\n\\r\\n            // set the donation timer for 2 weeks (14 days)\\r\\n            uint donationRoundEndTime = donationRoundStartTime + 1209600;\\r\\n\\r\\n            // set a timer for late donations (5 days)\\r\\n            uint lateDonationStartTime = donationRoundEndTime;\\r\\n            uint lateDonationEndTime = lateDonationStartTime + 432000;\\r\\n\\r\\n            // save the group donation rounds\\r\\n            GroupDonation memory groupdonation = GroupDonation(group, donationRound, donationRoundStartTime, donationRoundEndTime, lateDonationStartTime, lateDonationEndTime);\\r\\n\\r\\n            // add to the mapping for groups and groupdonations\\r\\n            groupDonations[groupId].push(groupdonation);\\r\\n\\r\\n            // update the donationRoundsTimer for 27 days (1 month)\\r\\n            donationRoundsTimer += 2332800;\\r\\n\\r\\n            // increase the donations round\\r\\n            donationRound += 1;\\r\\n        }\\r\\n\\r\\n\\r\\n        // set next payout and payout amounts for groupmembers\\r\\n        for (uint i=0; i<groupMembers.length; i++) {\\r\\n            \\r\\n            GroupMember storage groupMember = groupMembers[i];\\r\\n\\r\\n            // set the groupmember's next payout date\\r\\n            groupMember.nextPaymentDate = group.groupActivationTime + 2332800;\\r\\n        \\r\\n            // TODO: ADMIN SHARE\\r\\n        \\r\\n            // set the payout amount (1/2 for late payment penalties and in case of missed future payments)\\r\\n            groupMember.nextPaymentAmount = ((group.groupBuyInAmount * 6) - group.groupBuyInAmount) / 2;\\r\\n            \\r\\n            // save the amount to be paid at the end of the saving cycle\\r\\n            groupMember.lastPaymentAmount = groupMember.nextPaymentAmount;\\r\\n\\r\\n            // updte the group activation time (it is the counter used to calculate the payout algorithm)\\r\\n            group.groupActivationTime = groupMember.nextPaymentDate;\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to pay groupmember if it is the user's turn\\r\\n    function payGroupMember(uint groupId) public {\\r\\n\\r\\n        // get the group and groupmembers\\r\\n        Group storage group = groupDict[groupId];\\r\\n        GroupMember[] storage groupMembers = groupinfo_i[groupId];\\r\\n\\r\\n        // validate\\r\\n        if (msg.sender != group.groupCoordinator) {\\r\\n            revert(\\\"You are not the coordinator of this group\\\");\\r\\n        }\\r\\n        if (groupMembers.length != 6) {\\r\\n            revert(\\\"The group is incomplete\\\");\\r\\n        }\\r\\n\\r\\n        // look for the person to be paid\\r\\n        for (uint i=0; i<groupMembers.length; i++) {\\r\\n            \\r\\n            // get the groupmember and groupmember user profile\\r\\n            GroupMember storage groupMember = groupMembers[i];\\r\\n            EsusuUser storage userprofile = userProfile[groupMember.userAddress];\\r\\n            \\r\\n            // get the groupmember's next payout amount\\r\\n            uint paymentAmount = groupMember.nextPaymentAmount;\\r\\n\\r\\n            // check if his payment is valid\\r\\n            if (block.timestamp >= groupMember.nextPaymentDate) {\\r\\n                if (paymentAmount > 0) {\\r\\n\\r\\n                    // payout \\r\\n                    userprofile.userBalance += paymentAmount;\\r\\n                    \\r\\n                    // subscribe to events\\r\\n                    emit payGroupMemberEvent(group, groupMember, paymentAmount, block.timestamp, address(this).balance);\\r\\n                    \\r\\n                    // update the groupmember's payment amount\\r\\n                    groupMember.nextPaymentAmount = 0;\\r\\n                    group.groupBalance -= groupMember.nextPaymentAmount;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function for users to withdraw funds\\r\\n    function userWithdrawal() public payable {\\r\\n\\r\\n        require(userProfile[msg.sender].userAddress == msg.sender, \\\"Create an EsusuUser account to access this function\\\");\\r\\n\\r\\n        // get the user profile\\r\\n        EsusuUser storage userprofile = userProfile[msg.sender];\\r\\n\\r\\n        // check that the user has funds \\r\\n        if (userprofile.userBalance > 0) {\\r\\n\\r\\n            // since we deal in ether, convert the funds to be withdrawn to ether\\r\\n            uint withdrawalAmount = userprofile.userBalance * (1 ether);\\r\\n\\r\\n            // pay the user\\r\\n            if (payable(msg.sender).send(withdrawalAmount)) {\\r\\n                userprofile.userBalance = 0;\\r\\n\\r\\n                // subscribe to events\\r\\n                emit userWithdrawalEvent(userprofile, userprofile.userBalance, block.timestamp, address(this).balance);\\r\\n            } else {\\r\\n                revert(\\\"Unable to pay\\\");\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to collect group donations\\r\\n    function userDonation(uint groupId, uint donationRound) public payable {\\r\\n\\r\\n        // get the group and groupmembers and groupdonations\\r\\n        Group storage group = groupDict[groupId];\\r\\n        GroupMember[] storage groupMembers = groupinfo_i[groupId];\\r\\n        GroupDonation[] storage groupdonations = groupDonations[groupId];\\r\\n\\r\\n        // validate\\r\\n        if (groupMembers.length != 6) {\\r\\n            revert(\\\"The group is incomplete\\\");\\r\\n        }\\r\\n\\r\\n        // get the amount to be paid for donation\\r\\n        uint donationAmount = group.groupBuyInAmount * (1 ether);\\r\\n\\r\\n        // validate payment amount\\r\\n        if (msg.value < donationAmount) {\\r\\n            revert(\\\"group payment should be group buy in amount\\\");\\r\\n        }\\r\\n\\r\\n        // ensure the donator is a member of the group and has not paid for that round\\r\\n        bool isGroupMember = false;\\r\\n        for (uint i=0; i<groupMembers.length; i++) {\\r\\n            if (groupMembers[i].userAddress == msg.sender) {\\r\\n\\r\\n                // get the groupmember\\r\\n                GroupMember storage groupmember = groupMembers[i];\\r\\n\\r\\n                // check if the user has already donated for the donation round requested for\\r\\n                for (uint k=0; k<groupmember.completedDonationRounds.length; k++) {\\r\\n                    if (groupmember.completedDonationRounds[k] == donationRound) {\\r\\n                        revert(\\\"You have already donated for this round\\\");\\r\\n                    }\\r\\n                }\\r\\n                isGroupMember = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // get the donation round requested for\\r\\n        GroupDonation memory selectedDonationRound;\\r\\n        bool isFound_selectedDonationRound = false;\\r\\n        if (isGroupMember == true) {\\r\\n            // get the group donation round that was requested\\r\\n            for (uint j=0; j<groupdonations.length; j++) {\\r\\n                if (groupdonations[j].donationRound == donationRound) {\\r\\n                    selectedDonationRound = groupdonations[j];\\r\\n                    isFound_selectedDonationRound = true;\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            revert(\\\"You are not a member of this group\\\");\\r\\n        }\\r\\n\\r\\n        // check that the round is still valid\\r\\n        if (isFound_selectedDonationRound == true) {\\r\\n            if (block.timestamp >= selectedDonationRound.donationStartTime && block.timestamp <= selectedDonationRound.donationEndTime) {\\r\\n\\r\\n                // pay the donation\\r\\n                if(!payable(msg.sender).send(group.groupBuyInAmount)) {\\r\\n                    revert(\\\"Unable to transfer donation funds\\\");\\r\\n                }\\r\\n\\r\\n                // increase the group balance\\r\\n                group.groupBalance += group.groupBuyInAmount;\\r\\n\\r\\n                // add the donation round to users completed list\\r\\n                for (uint m=0; m<groupMembers.length; m++) {\\r\\n                    if (groupMembers[m].userAddress == msg.sender) {\\r\\n                        GroupMember storage groupmember = groupMembers[m];\\r\\n                        groupmember.completedDonationRounds.push(donationRound);\\r\\n                    }\\r\\n                }\\r\\n            \\r\\n            } else if (block.timestamp < selectedDonationRound.donationStartTime) {\\r\\n                revert(\\\"This group round is not active yet\\\");\\r\\n            } else {\\r\\n                revert(\\\"This group round is expired\\\");\\r\\n            }\\r\\n        } else {\\r\\n            revert(\\\"no group round of that choice\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // function to accept late donations\\r\\n    function lateDonation(uint groupId, uint donationRound) public payable {\\r\\n\\r\\n        // get the group and groupmembers and groupdonations\\r\\n        Group storage group = groupDict[groupId];\\r\\n        GroupMember[] storage groupMembers = groupinfo_i[groupId];\\r\\n        GroupDonation[] storage groupdonations = groupDonations[groupId];\\r\\n\\r\\n        // validate\\r\\n        if (groupMembers.length != 6) {\\r\\n            revert(\\\"The group is incomplete\\\");\\r\\n        }\\r\\n\\r\\n        // get the donation amount\\r\\n        uint donationAmount = group.groupBuyInAmount * (1 ether);\\r\\n\\r\\n        if (msg.value < donationAmount) {\\r\\n            revert(\\\"group payment should be group buy in amount\\\");\\r\\n        }\\r\\n\\r\\n        // ensure the donator is a member of the group and has not paid for that round\\r\\n        bool isGroupMember = false;\\r\\n        for (uint i=0; i<groupMembers.length; i++) {\\r\\n            if (groupMembers[i].userAddress == msg.sender) {\\r\\n\\r\\n                // get the groupmember\\r\\n                GroupMember storage groupmember = groupMembers[i];\\r\\n\\r\\n                // check if the user has already donated for the donation round requested for\\r\\n                for (uint k=0; k<groupmember.completedDonationRounds.length; k++) {\\r\\n                    if (groupmember.completedDonationRounds[k] == donationRound) {\\r\\n                        revert(\\\"You have already donated for this round\\\");\\r\\n                    }\\r\\n                }\\r\\n                isGroupMember = true;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        // get the donation round requested for\\r\\n        GroupDonation memory selectedDonationRound;\\r\\n        bool isFound_selectedDonationRound = false;\\r\\n        if (isGroupMember == true) {\\r\\n            // get the group donation round that was requested\\r\\n            for (uint j=0; j<groupdonations.length; j++) {\\r\\n                if (groupdonations[j].donationRound == donationRound) {\\r\\n                    selectedDonationRound = groupdonations[j];\\r\\n                    isFound_selectedDonationRound = true;\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            revert(\\\"You are not a member of this group\\\");\\r\\n        }\\r\\n\\r\\n        // check that the round is still valid for late payment\\r\\n        if (isFound_selectedDonationRound == true) {\\r\\n            if (block.timestamp >= selectedDonationRound.latePaymentStartTime && block.timestamp <= selectedDonationRound.latePaymentEndTime) {\\r\\n\\r\\n                // pay the donation\\r\\n                if(!payable(msg.sender).send(group.groupBuyInAmount)) {\\r\\n                    revert(\\\"Unable to transfer donation funds\\\");\\r\\n                }\\r\\n\\r\\n                // increase the group balance\\r\\n                group.groupBalance += group.groupBuyInAmount;\\r\\n\\r\\n                // add the donation round to users completed list\\r\\n                for (uint m=0; m<groupMembers.length; m++) {\\r\\n                    if (groupMembers[m].userAddress == msg.sender) {\\r\\n                        GroupMember storage groupmember = groupMembers[m];\\r\\n                        groupmember.completedDonationRounds.push(donationRound);\\r\\n\\r\\n                        // add the penalty for late payment\\r\\n                        groupmember.lastPaymentAmount -= group.groupBuyInAmount / 2;\\r\\n                    }\\r\\n                }\\r\\n            \\r\\n            } else if (block.timestamp < selectedDonationRound.donationStartTime) {\\r\\n                revert(\\\"The late payment for this group round is not active yet\\\");\\r\\n            } else {\\r\\n                revert(\\\"The late payment for thsi group round is expired\\\");\\r\\n            }\\r\\n        } else {\\r\\n            revert(\\\"no group round of this choice\\\");\\r\\n        }\\r\\n\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0x0480bc6caebbadb588189ce053a8ce1ab2eb6494d4b8de26fc81416b3f220efb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260008055600060015534801561001957600080fd5b50615269806100296000396000f3fe6080604052600436106100e85760003560e01c8063ae2ad38b1161008a578063d8314ffc11610059578063d8314ffc146102bc578063e367fc6a146102e7578063eed02e4b14610303578063f38c66ba1461031f576100e8565b8063ae2ad38b14610256578063b451fe031461027f578063bd68b8ca1461029b578063c765da84146102a5576100e8565b80636f61c744116100c65780636f61c74414610199578063874a640a146101c45780638f23b326146101ed5780639f4216e814610218576100e8565b806307973ccf146100ed578063097c214f146101185780633f82e7f41461015a575b600080fd5b3480156100f957600080fd5b5061010261033b565b60405161010f9190614e9f565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906137d5565b610341565b60405161015196959493929190614eba565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c91906137d5565b610442565b60405161019093929190614db4565b60405180910390f35b3480156101a557600080fd5b506101ae610987565b6040516101bb9190614d54565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e691906137d5565b610b14565b005b3480156101f957600080fd5b50610202611004565b60405161020f9190614e9f565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a91906137d5565b61100a565b60405161024d9291906149c9565b60405180910390f35b34801561026257600080fd5b5061027d600480360381019061027891906137d5565b61105b565b005b610299600480360381019061029491906137fe565b61129c565b005b6102a361193b565b005b3480156102b157600080fd5b506102ba611b38565b005b3480156102c857600080fd5b506102d1611da2565b6040516102de91906149f2565b60405180910390f35b61030160048036038101906102fc9190613781565b612034565b005b61031d600480360381019061031891906137d5565b6127f9565b005b610339600480360381019061033491906137fe565b612deb565b005b60015481565b6002818154811061034e57fe5b9060005260206000209060060201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b5050505050908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154905086565b61044a6134aa565b6060803373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490614ad4565b60405180910390fd5b600060086000868152602001908152602001600020905060006006600087815260200190815260200160002090506000600460008881526020019081526020016000209050828282826040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106145780601f106105e957610100808354040283529160200191610614565b820191906000526020600020905b8154815290600101906020018083116105f757829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050925081805480602002602001604051908101604052809291908181526020016000905b828210156107b257838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561079a57602002820191906000526020600020905b815481526020019060010190808311610786575b505050505081525050815260200190600101906106b4565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561097157838290600052602060002090600b02016040518060c0016040529081600082016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108af5780601f10610884576101008083540402835291602001916108af565b820191906000526020600020905b81548152906001019060200180831161089257829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a82015481525050815260200190600101906107d9565b5050505090509550955095505050509193909250565b61098f6134f6565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5690614b14565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505091505090565b600060086000838152602001908152602001600020905060006006600084815260200190815260200160002090508160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90614a94565b60405180910390fd5b6006818054905014610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1290614bd4565b60405180910390fd5b6000826005015414610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990614c34565b60405180910390fd5b4282600501819055507f6b7c89c3c4f419ab50a965093496f51ea0246c9045e034dda581f2f5fed1c92782836005015447604051610ca293929190614e61565b60405180910390a16000600290506000836005015490506000600190505b8380549050811015610f7457600082905060006212750082019050600081905060006206978082019050610cf2613526565b6040518060c001604052808b6040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dac5780601f10610d8157610100808354040283529160200191610dac565b820191906000526020600020905b815481529060010190602001808311610d8f57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820154815250508152602001898152602001868152602001858152602001848152602001838152509050600460008c81526020019081526020016000208190806001815401808255809150506001900390600052602060002090600b0201600090919091909150600082015181600001600082015181600001556020820151816001019080519060200190610eb8929190613562565b506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015550506020820151816006015560408201518160070155606082015181600801556080820151816009015560a082015181600a01555050622398808701965060018801975050505050508080600101915050610cc0565b5060005b8380549050811015610ffc576000848281548110610f9257fe5b906000526020600020906005020190506223988086600501540181600101819055506002866002015460068860020154020381610fcb57fe5b0481600201819055508060020154816003018190555080600101548660050181905550508080600101915050610f78565b505050505050565b60005481565b6003818154811061101757fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600060086000838152602001908152602001600020905060006006600084815260200190815260200160002090508160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461111b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111290614a94565b60405180910390fd5b6006818054905014611162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115990614bd4565b60405180910390fd5b60005b818054905081101561129657600082828154811061117f57fe5b906000526020600020906005020190506000600a60008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260020154905082600101544210611286576000811115611285578082600101600082825401925050819055507f51232e1646a1b7523c69ceb6d03d4d1289b218a7a0f0618682771506ebb61a03868483424760405161125c959493929190614e00565b60405180910390a160008360020181905550826002015486600401600082825403925050819055505b5b5050508080600101915050611165565b50505050565b6000600860008481526020019081526020016000209050600060066000858152602001908152602001600020905060006004600086815260200190815260200160002090506006828054905014611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f90614bd4565b60405180910390fd5b6000670de0b6b3a764000084600201540290508034101561137e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137590614d14565b60405180910390fd5b6000805b84805490508110156114ac573373ffffffffffffffffffffffffffffffffffffffff168582815481106113b157fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561149f57600085828154811061140d57fe5b9060005260206000209060050201905060005b8160040180549050811015611498578882600401828154811061143f57fe5b9060005260206000200154141561148b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148290614a14565b60405180910390fd5b8080600101915050611420565b5060019250505b8080600101915050611382565b506114b5613526565b600060011515831515141561169d5760005b858054905081101561169757888682815481106114e057fe5b90600052602060002090600b020160060154141561168a5785818154811061150457fe5b90600052602060002090600b02016040518060c0016040529081600082016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115d05780601f106115a5576101008083540402835291602001916115d0565b820191906000526020600020905b8154815290600101906020018083116115b357829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820154815250509250600191505b80806001019150506114c7565b506116d8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cf90614b74565b60405180910390fd5b6001151581151514156118f557816040015142101580156116fd575081606001514211155b1561186e573373ffffffffffffffffffffffffffffffffffffffff166108fc88600201549081150290604051600060405180830381858888f1935050505061177a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177190614a74565b60405180910390fd5b8660020154876004016000828254019250508190555060005b8680549050811015611868573373ffffffffffffffffffffffffffffffffffffffff168782815481106117c257fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561185b57600087828154811061181e57fe5b90600052602060002090600502019050806004018a9080600181540180825580915050600190039060005260206000200160009091909190915055505b8080600101915050611793565b506118f0565b81604001514210156118b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ac90614b54565b60405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e790614c94565b60405180910390fd5b611930565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192790614cb4565b60405180910390fd5b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0290614c74565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600101541115611b35576000670de0b6b3a764000082600101540290503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015611af857600082600101819055507f0105b230572b7743ce6a9e263463c8cac1f0e23480f08113509f2e5bbee7be688283600101544247604051611aeb9493929190614d6f565b60405180910390a1611b33565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2a90614bf4565b60405180910390fd5b505b50565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0090614d34565b60405180910390fd5b611c116134f6565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509050600381908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550506001806000828254019250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507f6bacbcd15a2eb815b9b618bc8d0a2de0fb8792306fec021b8c84ab15d9aeda0833824247604051611d979493929190614946565b60405180910390a150565b60603373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6b90614b94565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080805480602002602001604051908101604052809291908181526020016000905b8282101561202a57838290600052602060002090600602016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f9e5780601f10611f7357610100808354040283529160200191611f9e565b820191906000526020600020905b815481529060010190602001808311611f8157829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505081526020019060010190611ed8565b5050505091505090565b6005811015612078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206f90614a34565b60405180910390fd5b674563918244f400003410156120c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ba90614b34565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218a90614cf4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050612207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121fe90614ab4565b60405180910390fd5b6001600080828254019250508190555060606122216135e2565b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001838152509050600060086000805481526020019081526020016000209050600760008054815260200190815260200160002082908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155608082015181600401908051906020019061233a929190613627565b505050600054816000018190555084816001019080519060200190612360929190613562565b50838160020181905550338160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160040181905550600081600501819055506002819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015481600001556001820181600101908054600181600116156101000203166002900461241d929190613674565b50600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048201548160040155600582015481600501555050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015481600001556001820181600101908054600181600116156101000203166002900461253f929190613674565b50600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600482015481600401556005820154816005015550506005816001016040516125da919061492f565b908152602001604051809103902082908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612693929190613627565b505050600660008054815260200190815260200160002082908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612755929190613627565b5050507f66e7f23c56bebeebc6febc6d1bcf92e9571c4249950cb88f8bdd1932c1b81dcf8160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682476040516127af9392919061498b565b60405180910390a17f7019202b440af1575020c17f7fd2969fbb2e2959832e8a6e6ff93e590e51ad2a3382476040516127ea9392919061498b565b60405180910390a15050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128c090614af4565b60405180910390fd5b6000600860008381526020019081526020016000209050674563918244f400003410156128f557600080fd5b60006006600084815260200190815260200160002090506006818054905010612953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161294a90614c54565b60405180910390fd5b60005b8180549050811015612a1b573373ffffffffffffffffffffffffffffffffffffffff1682828154811061298557fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612a0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0590614cd4565b60405180910390fd5b8080600101915050612956565b503373ffffffffffffffffffffffffffffffffffffffff166108fc83600201549081150290604051600060405180830381858888f19350505050612a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a8b90614ab4565b60405180910390fd5b6060612a9e6135e2565b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001838152509050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002090600602016000909190919091506000820154816000015560018201816001019080546001816001161561010002031660029004612b7a929190613674565b50600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048201548160040155600582015481600501555050600584600101604051612c15919061492f565b908152602001604051809103902081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612cce929190613627565b505050600660008054815260200190815260200160002081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612d90929190613627565b505050836002015484600401600082825401925050819055507f7019202b440af1575020c17f7fd2969fbb2e2959832e8a6e6ff93e590e51ad2a338547604051612ddc9392919061498b565b60405180910390a15050505050565b6000600860008481526020019081526020016000209050600060066000858152602001908152602001600020905060006004600086815260200190815260200160002090506006828054905014612e77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e6e90614bd4565b60405180910390fd5b6000670de0b6b3a7640000846002015402905080341015612ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec490614d14565b60405180910390fd5b6000805b8480549050811015612ffb573373ffffffffffffffffffffffffffffffffffffffff16858281548110612f0057fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612fee576000858281548110612f5c57fe5b9060005260206000209060050201905060005b8160040180549050811015612fe75788826004018281548110612f8e57fe5b90600052602060002001541415612fda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fd190614a14565b60405180910390fd5b8080600101915050612f6f565b5060019250505b8080600101915050612ed1565b50613004613526565b60006001151583151514156131ec5760005b85805490508110156131e6578886828154811061302f57fe5b90600052602060002090600b02016006015414156131d95785818154811061305357fe5b90600052602060002090600b02016040518060c0016040529081600082016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561311f5780601f106130f45761010080835404028352916020019161311f565b820191906000526020600020905b81548152906001019060200180831161310257829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820154815250509250600191505b8080600101915050613016565b50613227565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161321e90614b74565b60405180910390fd5b600115158115151415613464578160800151421015801561324c57508160a001514211155b156133dd573373ffffffffffffffffffffffffffffffffffffffff166108fc88600201549081150290604051600060405180830381858888f193505050506132c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132c090614a74565b60405180910390fd5b8660020154876004016000828254019250508190555060005b86805490508110156133d7573373ffffffffffffffffffffffffffffffffffffffff1687828154811061331157fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156133ca57600087828154811061336d57fe5b90600052602060002090600502019050806004018a908060018154018082558091505060019003906000526020600020016000909190919091505560028960020154816133b657fe5b048160030160008282540392505081905550505b80806001019150506132e2565b5061345f565b8160400151421015613424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161341b90614bb4565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161345690614a54565b60405180910390fd5b61349f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161349690614c14565b60405180910390fd5b505050505050505050565b6040518060c00160405280600081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060c001604052806135396134aa565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135a357805160ff19168380011785556135d1565b828001600101855582156135d1579182015b828111156135d05782518255916020019190600101906135b5565b5b5090506135de91906136fb565b5090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001606081525090565b828054828255906000526020600020908101928215613663579160200282015b82811115613662578251825591602001919060010190613647565b5b50905061367091906136fb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106136ad57805485556136ea565b828001600101855582156136ea57600052602060002091601f016020900482015b828111156136e95782548255916001019190600101906136ce565b5b5090506136f791906136fb565b5090565b5b808211156137145760008160009055506001016136fc565b5090565b600082601f83011261372957600080fd5b813561373c61373782614f4f565b614f22565b9150808252602083016020830185838301111561375857600080fd5b613763838284615175565b50505092915050565b60008135905061377b8161521c565b92915050565b6000806040838503121561379457600080fd5b600083013567ffffffffffffffff8111156137ae57600080fd5b6137ba85828601613718565b92505060206137cb8582860161376c565b9150509250929050565b6000602082840312156137e757600080fd5b60006137f58482850161376c565b91505092915050565b6000806040838503121561381157600080fd5b600061381f8582860161376c565b92505060206138308582860161376c565b9150509250929050565b6000613846838361459c565b905092915050565b600061385a8383614625565b905092915050565b600061386e838361473e565b905092915050565b60006138828383614911565b60208301905092915050565b6138978161513f565b82525050565b6138a681615103565b82525050565b6138b581615103565b82525050565b60006138c682614fe5565b6138d08185615068565b9350836020820285016138e285614f7b565b8060005b8581101561391e57848403895281516138ff858261383a565b945061390a83615027565b925060208a019950506001810190506138e6565b50829750879550505050505092915050565b600061393b82614ff0565b6139458185615079565b93508360208202850161395785614f8b565b8060005b858110156139935784840389528151613974858261384e565b945061397f83615034565b925060208a0199505060018101905061395b565b50829750879550505050505092915050565b60006139b082614ffb565b6139ba818561508a565b9350836020820285016139cc85614f9b565b8060005b85811015613a0857848403895281516139e98582613862565b94506139f483615041565b925060208a019950506001810190506139d0565b50829750879550505050505092915050565b6000613a2582615006565b613a2f818561509b565b9350613a3a83614fab565b8060005b83811015613a6b578151613a528882613876565b9750613a5d8361504e565b925050600181019050613a3e565b5085935050505092915050565b6000613a8382615011565b613a8d818561509b565b9350613a9883614fbb565b8060005b83811015613ad057613aad826151eb565b613ab78882613876565b9750613ac28361505b565b925050600181019050613a9c565b5085935050505092915050565b6000613ae88261501c565b613af281856150ac565b9350613b02818560208601615184565b613b0b816151fe565b840191505092915050565b6000613b218261501c565b613b2b81856150bd565b9350613b3b818560208601615184565b613b44816151fe565b840191505092915050565b600081546001811660008114613b6c5760018114613b9257613bd6565b607f6002830416613b7d81876150ac565b955060ff198316865260208601935050613bd6565b60028204613ba081876150ac565b9550613bab85614fd0565b60005b82811015613bcd57815481890152600182019150602081019050613bae565b80880195505050505b505092915050565b600081546001811660008114613bfb5760018114613c2057613c64565b607f6002830416613c0c81876150ce565b955060ff1983168652808601935050613c64565b60028204613c2e81876150ce565b9550613c3985614fd0565b60005b82811015613c5b57815481890152600182019150602081019050613c3c565b82880195505050505b505092915050565b6000613c796027836150bd565b91507f596f75206861766520616c726561647920646f6e6174656420666f722074686960008301527f7320726f756e64000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613cdf6005836150bd565b91507f6572726f720000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613d1f6030836150bd565b91507f546865206c617465207061796d656e7420666f7220746873692067726f75702060008301527f726f756e642069732065787069726564000000000000000000000000000000006020830152604082019050919050565b6000613d856021836150bd565b91507f556e61626c6520746f207472616e7366657220646f6e6174696f6e2066756e6460008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613deb6029836150bd565b91507f596f7520617265206e6f742074686520636f6f7264696e61746f72206f66207460008301527f6869732067726f757000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613e51601e836150bd565b91507f556e61626c6520746f207472616e7366657220627579496e2066756e647300006000830152602082019050919050565b6000613e916033836150bd565b91507f596f75206861766520746f20626520616e2045737573755573657220746f206760008301527f6574207468697320696e666f726d6174696f6e000000000000000000000000006020830152604082019050919050565b6000613ef7602b836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206a60008301527f6f696e20612067726f75700000000000000000000000000000000000000000006020830152604082019050919050565b6000613f5d602b836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f207660008301527f6965772070726f66696c650000000000000000000000000000000000000000006020830152604082019050919050565b6000613fc3600b836150bd565b91507f6574686572206572726f720000000000000000000000000000000000000000006000830152602082019050919050565b60006140036022836150bd565b91507f546869732067726f757020726f756e64206973206e6f7420616374697665207960008301527f65740000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006140696022836150bd565b91507f596f7520617265206e6f742061206d656d626572206f6620746869732067726f60008301527f75700000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006140cf6038836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206160008301527f636365737320746869732066756e6374696f6e616c69747900000000000000006020830152604082019050919050565b60006141356037836150bd565b91507f546865206c617465207061796d656e7420666f7220746869732067726f75702060008301527f726f756e64206973206e6f7420616374697665207965740000000000000000006020830152604082019050919050565b600061419b6017836150bd565b91507f5468652067726f757020697320696e636f6d706c6574650000000000000000006000830152602082019050919050565b60006141db600d836150bd565b91507f556e61626c6520746f20706179000000000000000000000000000000000000006000830152602082019050919050565b600061421b601d836150bd565b91507f6e6f2067726f757020726f756e64206f6620746869732063686f6963650000006000830152602082019050919050565b600061425b601c836150bd565b91507f546869732067726f757020697320616c726561647920616374697665000000006000830152602082019050919050565b600061429b601e836150bd565b91507f536f7272792c20746869732067726f7570206973206d61786564206f757400006000830152602082019050919050565b60006142db6033836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206160008301527f636365737320746869732066756e6374696f6e000000000000000000000000006020830152604082019050919050565b6000614341601b836150bd565b91507f546869732067726f757020726f756e64206973206578706972656400000000006000830152602082019050919050565b6000614381601d836150bd565b91507f6e6f2067726f757020726f756e64206f6620746861742063686f6963650000006000830152602082019050919050565b60006143c16022836150bd565b91507f5573657220616c72656164792062656c6f6e677320746f20746869732067726f60008301527f75700000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614427602d836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206360008301527f726561746520612067726f7570000000000000000000000000000000000000006020830152604082019050919050565b600061448d602b836150bd565b91507f67726f7570207061796d656e742073686f756c642062652067726f757020627560008301527f7920696e20616d6f756e740000000000000000000000000000000000000000006020830152604082019050919050565b60006144f36016836150bd565b91507f596f752061726520616c726561647920612075736572000000000000000000006000830152602082019050919050565b60408201600082015161453c600085018261389d565b50602082015161454f6020850182614911565b50505050565b60408201600080830154905061456a816151b7565b614577600086018261389d565b5060018301549050614588816151d1565b6145956020860182614911565b5050505050565b600060c08301600083015184820360008601526145b9828261473e565b91505060208301516145ce6020860182614911565b5060408301516145e16040860182614911565b5060608301516145f46060860182614911565b5060808301516146076080860182614911565b5060a083015161461a60a0860182614911565b508091505092915050565b600060a08301600083015161463d600086018261389d565b5060208301516146506020860182614911565b5060408301516146636040860182614911565b5060608301516146766060860182614911565b506080830151848203608086015261468e8282613a1a565b9150508091505092915050565b600060a0830160008084015490506146b2816151b7565b6146bf600087018261389d565b50600184015490506146d0816151d1565b6146dd6020870182614911565b50600284015490506146ee816151d1565b6146fb6040870182614911565b506003840154905061470c816151d1565b6147196060870182614911565b506004840185830360808701526147308382613a78565b925050819250505092915050565b600060c0830160008301516147566000860182614911565b506020830151848203602086015261476e8282613add565b91505060408301516147836040860182614911565b506060830151614796606086018261389d565b5060808301516147a96080860182614911565b5060a08301516147bc60a0860182614911565b508091505092915050565b600060c0830160008301516147df6000860182614911565b50602083015184820360208601526147f78282613add565b915050604083015161480c6040860182614911565b50606083015161481f606086018261389d565b5060808301516148326080860182614911565b5060a083015161484560a0860182614911565b508091505092915050565b600060c083016000808401549050614867816151d1565b6148746000870182614911565b5060018401858303602087015261488b8382613b4f565b9250506002840154905061489e816151d1565b6148ab6040870182614911565b50600384015490506148bc816151b7565b6148c9606087018261389d565b50600484015490506148da816151d1565b6148e76080870182614911565b50600584015490506148f8816151d1565b61490560a0870182614911565b50819250505092915050565b61491a81615135565b82525050565b61492981615135565b82525050565b600061493b8284613bde565b915081905092915050565b600060a08201905061495b600083018761388e565b6149686020830186614526565b6149756060830185614920565b6149826080830184614920565b95945050505050565b60006060820190506149a0600083018661388e565b81810360208301526149b28185614850565b90506149c16040830184614920565b949350505050565b60006040820190506149de60008301856138ac565b6149eb6020830184614920565b9392505050565b60006020820190508181036000830152614a0c81846139a5565b905092915050565b60006020820190508181036000830152614a2d81613c6c565b9050919050565b60006020820190508181036000830152614a4d81613cd2565b9050919050565b60006020820190508181036000830152614a6d81613d12565b9050919050565b60006020820190508181036000830152614a8d81613d78565b9050919050565b60006020820190508181036000830152614aad81613dde565b9050919050565b60006020820190508181036000830152614acd81613e44565b9050919050565b60006020820190508181036000830152614aed81613e84565b9050919050565b60006020820190508181036000830152614b0d81613eea565b9050919050565b60006020820190508181036000830152614b2d81613f50565b9050919050565b60006020820190508181036000830152614b4d81613fb6565b9050919050565b60006020820190508181036000830152614b6d81613ff6565b9050919050565b60006020820190508181036000830152614b8d8161405c565b9050919050565b60006020820190508181036000830152614bad816140c2565b9050919050565b60006020820190508181036000830152614bcd81614128565b9050919050565b60006020820190508181036000830152614bed8161418e565b9050919050565b60006020820190508181036000830152614c0d816141ce565b9050919050565b60006020820190508181036000830152614c2d8161420e565b9050919050565b60006020820190508181036000830152614c4d8161424e565b9050919050565b60006020820190508181036000830152614c6d8161428e565b9050919050565b60006020820190508181036000830152614c8d816142ce565b9050919050565b60006020820190508181036000830152614cad81614334565b9050919050565b60006020820190508181036000830152614ccd81614374565b9050919050565b60006020820190508181036000830152614ced816143b4565b9050919050565b60006020820190508181036000830152614d0d8161441a565b9050919050565b60006020820190508181036000830152614d2d81614480565b9050919050565b60006020820190508181036000830152614d4d816144e6565b9050919050565b6000604082019050614d696000830184614526565b92915050565b600060a082019050614d846000830187614555565b614d916040830186614920565b614d9e6060830185614920565b614dab6080830184614920565b95945050505050565b60006060820190508181036000830152614dce81866147c7565b90508181036020830152614de28185613930565b90508181036040830152614df681846138bb565b9050949350505050565b600060a0820190508181036000830152614e1a8188614850565b90508181036020830152614e2e818761469b565b9050614e3d6040830186614920565b614e4a6060830185614920565b614e576080830184614920565b9695505050505050565b60006060820190508181036000830152614e7b8186614850565b9050614e8a6020830185614920565b614e976040830184614920565b949350505050565b6000602082019050614eb46000830184614920565b92915050565b600060c082019050614ecf6000830189614920565b8181036020830152614ee18188613b16565b9050614ef06040830187614920565b614efd60608301866138ac565b614f0a6080830185614920565b614f1760a0830184614920565b979650505050505050565b6000604051905081810181811067ffffffffffffffff82111715614f4557600080fd5b8060405250919050565b600067ffffffffffffffff821115614f6657600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081549050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061510e82615115565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061514a82615151565b9050919050565b600061515c82615163565b9050919050565b600061516e82615115565b9050919050565b82818337600083830152505050565b60005b838110156151a2578082015181840152602081019050615187565b838111156151b1576000848401525b50505050565b60006151ca6151c58361520f565b6150d9565b9050919050565b60006151e46151df8361520f565b6150f9565b9050919050565b60006151f782546151d1565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b61522581615135565b811461523057600080fd5b5056fea2646970667358221220a497e85dfcd935a2ab8f99364dffa835685c335e95f76581bca7b93764484f4c64736f6c63430007000033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c8063ae2ad38b1161008a578063d8314ffc11610059578063d8314ffc146102bc578063e367fc6a146102e7578063eed02e4b14610303578063f38c66ba1461031f576100e8565b8063ae2ad38b14610256578063b451fe031461027f578063bd68b8ca1461029b578063c765da84146102a5576100e8565b80636f61c744116100c65780636f61c74414610199578063874a640a146101c45780638f23b326146101ed5780639f4216e814610218576100e8565b806307973ccf146100ed578063097c214f146101185780633f82e7f41461015a575b600080fd5b3480156100f957600080fd5b5061010261033b565b60405161010f9190614e9f565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906137d5565b610341565b60405161015196959493929190614eba565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c91906137d5565b610442565b60405161019093929190614db4565b60405180910390f35b3480156101a557600080fd5b506101ae610987565b6040516101bb9190614d54565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e691906137d5565b610b14565b005b3480156101f957600080fd5b50610202611004565b60405161020f9190614e9f565b60405180910390f35b34801561022457600080fd5b5061023f600480360381019061023a91906137d5565b61100a565b60405161024d9291906149c9565b60405180910390f35b34801561026257600080fd5b5061027d600480360381019061027891906137d5565b61105b565b005b610299600480360381019061029491906137fe565b61129c565b005b6102a361193b565b005b3480156102b157600080fd5b506102ba611b38565b005b3480156102c857600080fd5b506102d1611da2565b6040516102de91906149f2565b60405180910390f35b61030160048036038101906102fc9190613781565b612034565b005b61031d600480360381019061031891906137d5565b6127f9565b005b610339600480360381019061033491906137fe565b612deb565b005b60015481565b6002818154811061034e57fe5b9060005260206000209060060201600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104005780601f106103d557610100808354040283529160200191610400565b820191906000526020600020905b8154815290600101906020018083116103e357829003601f168201915b5050505050908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154908060050154905086565b61044a6134aa565b6060803373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490614ad4565b60405180910390fd5b600060086000868152602001908152602001600020905060006006600087815260200190815260200160002090506000600460008881526020019081526020016000209050828282826040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106145780601f106105e957610100808354040283529160200191610614565b820191906000526020600020905b8154815290600101906020018083116105f757829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050925081805480602002602001604051908101604052809291908181526020016000905b828210156107b257838290600052602060002090600502016040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561079a57602002820191906000526020600020905b815481526020019060010190808311610786575b505050505081525050815260200190600101906106b4565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561097157838290600052602060002090600b02016040518060c0016040529081600082016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108af5780601f10610884576101008083540402835291602001916108af565b820191906000526020600020905b81548152906001019060200180831161089257829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a82015481525050815260200190600101906107d9565b5050505090509550955095505050509193909250565b61098f6134f6565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5690614b14565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505091505090565b600060086000838152602001908152602001600020905060006006600084815260200190815260200160002090508160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90614a94565b60405180910390fd5b6006818054905014610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1290614bd4565b60405180910390fd5b6000826005015414610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990614c34565b60405180910390fd5b4282600501819055507f6b7c89c3c4f419ab50a965093496f51ea0246c9045e034dda581f2f5fed1c92782836005015447604051610ca293929190614e61565b60405180910390a16000600290506000836005015490506000600190505b8380549050811015610f7457600082905060006212750082019050600081905060006206978082019050610cf2613526565b6040518060c001604052808b6040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dac5780601f10610d8157610100808354040283529160200191610dac565b820191906000526020600020905b815481529060010190602001808311610d8f57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600482015481526020016005820154815250508152602001898152602001868152602001858152602001848152602001838152509050600460008c81526020019081526020016000208190806001815401808255809150506001900390600052602060002090600b0201600090919091909150600082015181600001600082015181600001556020820151816001019080519060200190610eb8929190613562565b506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015550506020820151816006015560408201518160070155606082015181600801556080820151816009015560a082015181600a01555050622398808701965060018801975050505050508080600101915050610cc0565b5060005b8380549050811015610ffc576000848281548110610f9257fe5b906000526020600020906005020190506223988086600501540181600101819055506002866002015460068860020154020381610fcb57fe5b0481600201819055508060020154816003018190555080600101548660050181905550508080600101915050610f78565b505050505050565b60005481565b6003818154811061101757fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600060086000838152602001908152602001600020905060006006600084815260200190815260200160002090508160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461111b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111290614a94565b60405180910390fd5b6006818054905014611162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115990614bd4565b60405180910390fd5b60005b818054905081101561129657600082828154811061117f57fe5b906000526020600020906005020190506000600a60008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260020154905082600101544210611286576000811115611285578082600101600082825401925050819055507f51232e1646a1b7523c69ceb6d03d4d1289b218a7a0f0618682771506ebb61a03868483424760405161125c959493929190614e00565b60405180910390a160008360020181905550826002015486600401600082825403925050819055505b5b5050508080600101915050611165565b50505050565b6000600860008481526020019081526020016000209050600060066000858152602001908152602001600020905060006004600086815260200190815260200160002090506006828054905014611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f90614bd4565b60405180910390fd5b6000670de0b6b3a764000084600201540290508034101561137e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137590614d14565b60405180910390fd5b6000805b84805490508110156114ac573373ffffffffffffffffffffffffffffffffffffffff168582815481106113b157fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561149f57600085828154811061140d57fe5b9060005260206000209060050201905060005b8160040180549050811015611498578882600401828154811061143f57fe5b9060005260206000200154141561148b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148290614a14565b60405180910390fd5b8080600101915050611420565b5060019250505b8080600101915050611382565b506114b5613526565b600060011515831515141561169d5760005b858054905081101561169757888682815481106114e057fe5b90600052602060002090600b020160060154141561168a5785818154811061150457fe5b90600052602060002090600b02016040518060c0016040529081600082016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115d05780601f106115a5576101008083540402835291602001916115d0565b820191906000526020600020905b8154815290600101906020018083116115b357829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820154815250509250600191505b80806001019150506114c7565b506116d8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cf90614b74565b60405180910390fd5b6001151581151514156118f557816040015142101580156116fd575081606001514211155b1561186e573373ffffffffffffffffffffffffffffffffffffffff166108fc88600201549081150290604051600060405180830381858888f1935050505061177a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177190614a74565b60405180910390fd5b8660020154876004016000828254019250508190555060005b8680549050811015611868573373ffffffffffffffffffffffffffffffffffffffff168782815481106117c257fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561185b57600087828154811061181e57fe5b90600052602060002090600502019050806004018a9080600181540180825580915050600190039060005260206000200160009091909190915055505b8080600101915050611793565b506118f0565b81604001514210156118b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ac90614b54565b60405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e790614c94565b60405180910390fd5b611930565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192790614cb4565b60405180910390fd5b505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0290614c74565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600101541115611b35576000670de0b6b3a764000082600101540290503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015611af857600082600101819055507f0105b230572b7743ce6a9e263463c8cac1f0e23480f08113509f2e5bbee7be688283600101544247604051611aeb9493929190614d6f565b60405180910390a1611b33565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2a90614bf4565b60405180910390fd5b505b50565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611c09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0090614d34565b60405180910390fd5b611c116134f6565b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509050600381908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550506001806000828254019250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507f6bacbcd15a2eb815b9b618bc8d0a2de0fb8792306fec021b8c84ab15d9aeda0833824247604051611d979493929190614946565b60405180910390a150565b60603373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e6b90614b94565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080805480602002602001604051908101604052809291908181526020016000905b8282101561202a57838290600052602060002090600602016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f9e5780601f10611f7357610100808354040283529160200191611f9e565b820191906000526020600020905b815481529060010190602001808311611f8157829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505081526020019060010190611ed8565b5050505091505090565b6005811015612078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206f90614a34565b60405180910390fd5b674563918244f400003410156120c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ba90614b34565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218a90614cf4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050612207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121fe90614ab4565b60405180910390fd5b6001600080828254019250508190555060606122216135e2565b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001838152509050600060086000805481526020019081526020016000209050600760008054815260200190815260200160002082908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155608082015181600401908051906020019061233a929190613627565b505050600054816000018190555084816001019080519060200190612360929190613562565b50838160020181905550338160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838160040181905550600081600501819055506002819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015481600001556001820181600101908054600181600116156101000203166002900461241d929190613674565b50600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048201548160040155600582015481600501555050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015481600001556001820181600101908054600181600116156101000203166002900461253f929190613674565b50600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600482015481600401556005820154816005015550506005816001016040516125da919061492f565b908152602001604051809103902082908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612693929190613627565b505050600660008054815260200190815260200160002082908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612755929190613627565b5050507f66e7f23c56bebeebc6febc6d1bcf92e9571c4249950cb88f8bdd1932c1b81dcf8160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682476040516127af9392919061498b565b60405180910390a17f7019202b440af1575020c17f7fd2969fbb2e2959832e8a6e6ff93e590e51ad2a3382476040516127ea9392919061498b565b60405180910390a15050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128c090614af4565b60405180910390fd5b6000600860008381526020019081526020016000209050674563918244f400003410156128f557600080fd5b60006006600084815260200190815260200160002090506006818054905010612953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161294a90614c54565b60405180910390fd5b60005b8180549050811015612a1b573373ffffffffffffffffffffffffffffffffffffffff1682828154811061298557fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612a0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0590614cd4565b60405180910390fd5b8080600101915050612956565b503373ffffffffffffffffffffffffffffffffffffffff166108fc83600201549081150290604051600060405180830381858888f19350505050612a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a8b90614ab4565b60405180910390fd5b6060612a9e6135e2565b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001838152509050600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002090600602016000909190919091506000820154816000015560018201816001019080546001816001161561010002031660029004612b7a929190613674565b50600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048201548160040155600582015481600501555050600584600101604051612c15919061492f565b908152602001604051809103902081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612cce929190613627565b505050600660008054815260200190815260200160002081908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004019080519060200190612d90929190613627565b505050836002015484600401600082825401925050819055507f7019202b440af1575020c17f7fd2969fbb2e2959832e8a6e6ff93e590e51ad2a338547604051612ddc9392919061498b565b60405180910390a15050505050565b6000600860008481526020019081526020016000209050600060066000858152602001908152602001600020905060006004600086815260200190815260200160002090506006828054905014612e77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e6e90614bd4565b60405180910390fd5b6000670de0b6b3a7640000846002015402905080341015612ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec490614d14565b60405180910390fd5b6000805b8480549050811015612ffb573373ffffffffffffffffffffffffffffffffffffffff16858281548110612f0057fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612fee576000858281548110612f5c57fe5b9060005260206000209060050201905060005b8160040180549050811015612fe75788826004018281548110612f8e57fe5b90600052602060002001541415612fda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fd190614a14565b60405180910390fd5b8080600101915050612f6f565b5060019250505b8080600101915050612ed1565b50613004613526565b60006001151583151514156131ec5760005b85805490508110156131e6578886828154811061302f57fe5b90600052602060002090600b02016006015414156131d95785818154811061305357fe5b90600052602060002090600b02016040518060c0016040529081600082016040518060c001604052908160008201548152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561311f5780601f106130f45761010080835404028352916020019161311f565b820191906000526020600020905b81548152906001019060200180831161310257829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481525050815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820154815250509250600191505b8080600101915050613016565b50613227565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161321e90614b74565b60405180910390fd5b600115158115151415613464578160800151421015801561324c57508160a001514211155b156133dd573373ffffffffffffffffffffffffffffffffffffffff166108fc88600201549081150290604051600060405180830381858888f193505050506132c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132c090614a74565b60405180910390fd5b8660020154876004016000828254019250508190555060005b86805490508110156133d7573373ffffffffffffffffffffffffffffffffffffffff1687828154811061331157fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156133ca57600087828154811061336d57fe5b90600052602060002090600502019050806004018a908060018154018082558091505060019003906000526020600020016000909190919091505560028960020154816133b657fe5b048160030160008282540392505081905550505b80806001019150506132e2565b5061345f565b8160400151421015613424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161341b90614bb4565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161345690614a54565b60405180910390fd5b61349f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161349690614c14565b60405180910390fd5b505050505050505050565b6040518060c00160405280600081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060c001604052806135396134aa565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135a357805160ff19168380011785556135d1565b828001600101855582156135d1579182015b828111156135d05782518255916020019190600101906135b5565b5b5090506135de91906136fb565b5090565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001606081525090565b828054828255906000526020600020908101928215613663579160200282015b82811115613662578251825591602001919060010190613647565b5b50905061367091906136fb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106136ad57805485556136ea565b828001600101855582156136ea57600052602060002091601f016020900482015b828111156136e95782548255916001019190600101906136ce565b5b5090506136f791906136fb565b5090565b5b808211156137145760008160009055506001016136fc565b5090565b600082601f83011261372957600080fd5b813561373c61373782614f4f565b614f22565b9150808252602083016020830185838301111561375857600080fd5b613763838284615175565b50505092915050565b60008135905061377b8161521c565b92915050565b6000806040838503121561379457600080fd5b600083013567ffffffffffffffff8111156137ae57600080fd5b6137ba85828601613718565b92505060206137cb8582860161376c565b9150509250929050565b6000602082840312156137e757600080fd5b60006137f58482850161376c565b91505092915050565b6000806040838503121561381157600080fd5b600061381f8582860161376c565b92505060206138308582860161376c565b9150509250929050565b6000613846838361459c565b905092915050565b600061385a8383614625565b905092915050565b600061386e838361473e565b905092915050565b60006138828383614911565b60208301905092915050565b6138978161513f565b82525050565b6138a681615103565b82525050565b6138b581615103565b82525050565b60006138c682614fe5565b6138d08185615068565b9350836020820285016138e285614f7b565b8060005b8581101561391e57848403895281516138ff858261383a565b945061390a83615027565b925060208a019950506001810190506138e6565b50829750879550505050505092915050565b600061393b82614ff0565b6139458185615079565b93508360208202850161395785614f8b565b8060005b858110156139935784840389528151613974858261384e565b945061397f83615034565b925060208a0199505060018101905061395b565b50829750879550505050505092915050565b60006139b082614ffb565b6139ba818561508a565b9350836020820285016139cc85614f9b565b8060005b85811015613a0857848403895281516139e98582613862565b94506139f483615041565b925060208a019950506001810190506139d0565b50829750879550505050505092915050565b6000613a2582615006565b613a2f818561509b565b9350613a3a83614fab565b8060005b83811015613a6b578151613a528882613876565b9750613a5d8361504e565b925050600181019050613a3e565b5085935050505092915050565b6000613a8382615011565b613a8d818561509b565b9350613a9883614fbb565b8060005b83811015613ad057613aad826151eb565b613ab78882613876565b9750613ac28361505b565b925050600181019050613a9c565b5085935050505092915050565b6000613ae88261501c565b613af281856150ac565b9350613b02818560208601615184565b613b0b816151fe565b840191505092915050565b6000613b218261501c565b613b2b81856150bd565b9350613b3b818560208601615184565b613b44816151fe565b840191505092915050565b600081546001811660008114613b6c5760018114613b9257613bd6565b607f6002830416613b7d81876150ac565b955060ff198316865260208601935050613bd6565b60028204613ba081876150ac565b9550613bab85614fd0565b60005b82811015613bcd57815481890152600182019150602081019050613bae565b80880195505050505b505092915050565b600081546001811660008114613bfb5760018114613c2057613c64565b607f6002830416613c0c81876150ce565b955060ff1983168652808601935050613c64565b60028204613c2e81876150ce565b9550613c3985614fd0565b60005b82811015613c5b57815481890152600182019150602081019050613c3c565b82880195505050505b505092915050565b6000613c796027836150bd565b91507f596f75206861766520616c726561647920646f6e6174656420666f722074686960008301527f7320726f756e64000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613cdf6005836150bd565b91507f6572726f720000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000613d1f6030836150bd565b91507f546865206c617465207061796d656e7420666f7220746873692067726f75702060008301527f726f756e642069732065787069726564000000000000000000000000000000006020830152604082019050919050565b6000613d856021836150bd565b91507f556e61626c6520746f207472616e7366657220646f6e6174696f6e2066756e6460008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613deb6029836150bd565b91507f596f7520617265206e6f742074686520636f6f7264696e61746f72206f66207460008301527f6869732067726f757000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613e51601e836150bd565b91507f556e61626c6520746f207472616e7366657220627579496e2066756e647300006000830152602082019050919050565b6000613e916033836150bd565b91507f596f75206861766520746f20626520616e2045737573755573657220746f206760008301527f6574207468697320696e666f726d6174696f6e000000000000000000000000006020830152604082019050919050565b6000613ef7602b836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206a60008301527f6f696e20612067726f75700000000000000000000000000000000000000000006020830152604082019050919050565b6000613f5d602b836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f207660008301527f6965772070726f66696c650000000000000000000000000000000000000000006020830152604082019050919050565b6000613fc3600b836150bd565b91507f6574686572206572726f720000000000000000000000000000000000000000006000830152602082019050919050565b60006140036022836150bd565b91507f546869732067726f757020726f756e64206973206e6f7420616374697665207960008301527f65740000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006140696022836150bd565b91507f596f7520617265206e6f742061206d656d626572206f6620746869732067726f60008301527f75700000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006140cf6038836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206160008301527f636365737320746869732066756e6374696f6e616c69747900000000000000006020830152604082019050919050565b60006141356037836150bd565b91507f546865206c617465207061796d656e7420666f7220746869732067726f75702060008301527f726f756e64206973206e6f7420616374697665207965740000000000000000006020830152604082019050919050565b600061419b6017836150bd565b91507f5468652067726f757020697320696e636f6d706c6574650000000000000000006000830152602082019050919050565b60006141db600d836150bd565b91507f556e61626c6520746f20706179000000000000000000000000000000000000006000830152602082019050919050565b600061421b601d836150bd565b91507f6e6f2067726f757020726f756e64206f6620746869732063686f6963650000006000830152602082019050919050565b600061425b601c836150bd565b91507f546869732067726f757020697320616c726561647920616374697665000000006000830152602082019050919050565b600061429b601e836150bd565b91507f536f7272792c20746869732067726f7570206973206d61786564206f757400006000830152602082019050919050565b60006142db6033836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206160008301527f636365737320746869732066756e6374696f6e000000000000000000000000006020830152604082019050919050565b6000614341601b836150bd565b91507f546869732067726f757020726f756e64206973206578706972656400000000006000830152602082019050919050565b6000614381601d836150bd565b91507f6e6f2067726f757020726f756e64206f6620746861742063686f6963650000006000830152602082019050919050565b60006143c16022836150bd565b91507f5573657220616c72656164792062656c6f6e677320746f20746869732067726f60008301527f75700000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614427602d836150bd565b91507f43726561746520616e20457375737555736572206163636f756e7420746f206360008301527f726561746520612067726f7570000000000000000000000000000000000000006020830152604082019050919050565b600061448d602b836150bd565b91507f67726f7570207061796d656e742073686f756c642062652067726f757020627560008301527f7920696e20616d6f756e740000000000000000000000000000000000000000006020830152604082019050919050565b60006144f36016836150bd565b91507f596f752061726520616c726561647920612075736572000000000000000000006000830152602082019050919050565b60408201600082015161453c600085018261389d565b50602082015161454f6020850182614911565b50505050565b60408201600080830154905061456a816151b7565b614577600086018261389d565b5060018301549050614588816151d1565b6145956020860182614911565b5050505050565b600060c08301600083015184820360008601526145b9828261473e565b91505060208301516145ce6020860182614911565b5060408301516145e16040860182614911565b5060608301516145f46060860182614911565b5060808301516146076080860182614911565b5060a083015161461a60a0860182614911565b508091505092915050565b600060a08301600083015161463d600086018261389d565b5060208301516146506020860182614911565b5060408301516146636040860182614911565b5060608301516146766060860182614911565b506080830151848203608086015261468e8282613a1a565b9150508091505092915050565b600060a0830160008084015490506146b2816151b7565b6146bf600087018261389d565b50600184015490506146d0816151d1565b6146dd6020870182614911565b50600284015490506146ee816151d1565b6146fb6040870182614911565b506003840154905061470c816151d1565b6147196060870182614911565b506004840185830360808701526147308382613a78565b925050819250505092915050565b600060c0830160008301516147566000860182614911565b506020830151848203602086015261476e8282613add565b91505060408301516147836040860182614911565b506060830151614796606086018261389d565b5060808301516147a96080860182614911565b5060a08301516147bc60a0860182614911565b508091505092915050565b600060c0830160008301516147df6000860182614911565b50602083015184820360208601526147f78282613add565b915050604083015161480c6040860182614911565b50606083015161481f606086018261389d565b5060808301516148326080860182614911565b5060a083015161484560a0860182614911565b508091505092915050565b600060c083016000808401549050614867816151d1565b6148746000870182614911565b5060018401858303602087015261488b8382613b4f565b9250506002840154905061489e816151d1565b6148ab6040870182614911565b50600384015490506148bc816151b7565b6148c9606087018261389d565b50600484015490506148da816151d1565b6148e76080870182614911565b50600584015490506148f8816151d1565b61490560a0870182614911565b50819250505092915050565b61491a81615135565b82525050565b61492981615135565b82525050565b600061493b8284613bde565b915081905092915050565b600060a08201905061495b600083018761388e565b6149686020830186614526565b6149756060830185614920565b6149826080830184614920565b95945050505050565b60006060820190506149a0600083018661388e565b81810360208301526149b28185614850565b90506149c16040830184614920565b949350505050565b60006040820190506149de60008301856138ac565b6149eb6020830184614920565b9392505050565b60006020820190508181036000830152614a0c81846139a5565b905092915050565b60006020820190508181036000830152614a2d81613c6c565b9050919050565b60006020820190508181036000830152614a4d81613cd2565b9050919050565b60006020820190508181036000830152614a6d81613d12565b9050919050565b60006020820190508181036000830152614a8d81613d78565b9050919050565b60006020820190508181036000830152614aad81613dde565b9050919050565b60006020820190508181036000830152614acd81613e44565b9050919050565b60006020820190508181036000830152614aed81613e84565b9050919050565b60006020820190508181036000830152614b0d81613eea565b9050919050565b60006020820190508181036000830152614b2d81613f50565b9050919050565b60006020820190508181036000830152614b4d81613fb6565b9050919050565b60006020820190508181036000830152614b6d81613ff6565b9050919050565b60006020820190508181036000830152614b8d8161405c565b9050919050565b60006020820190508181036000830152614bad816140c2565b9050919050565b60006020820190508181036000830152614bcd81614128565b9050919050565b60006020820190508181036000830152614bed8161418e565b9050919050565b60006020820190508181036000830152614c0d816141ce565b9050919050565b60006020820190508181036000830152614c2d8161420e565b9050919050565b60006020820190508181036000830152614c4d8161424e565b9050919050565b60006020820190508181036000830152614c6d8161428e565b9050919050565b60006020820190508181036000830152614c8d816142ce565b9050919050565b60006020820190508181036000830152614cad81614334565b9050919050565b60006020820190508181036000830152614ccd81614374565b9050919050565b60006020820190508181036000830152614ced816143b4565b9050919050565b60006020820190508181036000830152614d0d8161441a565b9050919050565b60006020820190508181036000830152614d2d81614480565b9050919050565b60006020820190508181036000830152614d4d816144e6565b9050919050565b6000604082019050614d696000830184614526565b92915050565b600060a082019050614d846000830187614555565b614d916040830186614920565b614d9e6060830185614920565b614dab6080830184614920565b95945050505050565b60006060820190508181036000830152614dce81866147c7565b90508181036020830152614de28185613930565b90508181036040830152614df681846138bb565b9050949350505050565b600060a0820190508181036000830152614e1a8188614850565b90508181036020830152614e2e818761469b565b9050614e3d6040830186614920565b614e4a6060830185614920565b614e576080830184614920565b9695505050505050565b60006060820190508181036000830152614e7b8186614850565b9050614e8a6020830185614920565b614e976040830184614920565b949350505050565b6000602082019050614eb46000830184614920565b92915050565b600060c082019050614ecf6000830189614920565b8181036020830152614ee18188613b16565b9050614ef06040830187614920565b614efd60608301866138ac565b614f0a6080830185614920565b614f1760a0830184614920565b979650505050505050565b6000604051905081810181811067ffffffffffffffff82111715614f4557600080fd5b8060405250919050565b600067ffffffffffffffff821115614f6657600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081549050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061510e82615115565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061514a82615151565b9050919050565b600061515c82615163565b9050919050565b600061516e82615115565b9050919050565b82818337600083830152505050565b60005b838110156151a2578082015181840152602081019050615187565b838111156151b1576000848401525b50505050565b60006151ca6151c58361520f565b6150d9565b9050919050565b60006151e46151df8361520f565b6150f9565b9050919050565b60006151f782546151d1565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b61522581615135565b811461523057600080fd5b5056fea2646970667358221220a497e85dfcd935a2ab8f99364dffa835685c335e95f76581bca7b93764484f4c64736f6c63430007000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "groupCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "userCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 11,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "groupList",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Group)51_storage)dyn_storage"
      },
      {
        "astId": 14,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "userList",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(EsusuUser)26_storage)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "groupDonations",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_struct(GroupDonation)64_storage)dyn_storage)"
      },
      {
        "astId": 74,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "groupinfo",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(GroupMember)38_storage)dyn_storage)"
      },
      {
        "astId": 79,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "groupinfo_i",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_array(t_struct(GroupMember)38_storage)dyn_storage)"
      },
      {
        "astId": 84,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "groupMemberDict",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_array(t_struct(GroupMember)38_storage)dyn_storage)"
      },
      {
        "astId": 88,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "groupDict",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_struct(Group)51_storage)"
      },
      {
        "astId": 93,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "userGroups",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_struct(Group)51_storage)dyn_storage)"
      },
      {
        "astId": 97,
        "contract": "contracts/esusu.sol:Esusu",
        "label": "userProfile",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_struct(EsusuUser)26_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(EsusuUser)26_storage)dyn_storage": {
        "base": "t_struct(EsusuUser)26_storage",
        "encoding": "dynamic_array",
        "label": "struct Esusu.EsusuUser[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Group)51_storage)dyn_storage": {
        "base": "t_struct(Group)51_storage",
        "encoding": "dynamic_array",
        "label": "struct Esusu.Group[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(GroupDonation)64_storage)dyn_storage": {
        "base": "t_struct(GroupDonation)64_storage",
        "encoding": "dynamic_array",
        "label": "struct Esusu.GroupDonation[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(GroupMember)38_storage)dyn_storage": {
        "base": "t_struct(GroupMember)38_storage",
        "encoding": "dynamic_array",
        "label": "struct Esusu.GroupMember[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(Group)51_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Esusu.Group[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Group)51_storage)dyn_storage"
      },
      "t_mapping(t_address,t_struct(EsusuUser)26_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Esusu.EsusuUser)",
        "numberOfBytes": "32",
        "value": "t_struct(EsusuUser)26_storage"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(GroupMember)38_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Esusu.GroupMember[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(GroupMember)38_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(GroupDonation)64_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Esusu.GroupDonation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(GroupDonation)64_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(GroupMember)38_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Esusu.GroupMember[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(GroupMember)38_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Group)51_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Esusu.Group)",
        "numberOfBytes": "32",
        "value": "t_struct(Group)51_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(EsusuUser)26_storage": {
        "encoding": "inplace",
        "label": "struct Esusu.EsusuUser",
        "members": [
          {
            "astId": 23,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 25,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "userBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Group)51_storage": {
        "encoding": "inplace",
        "label": "struct Esusu.Group",
        "members": [
          {
            "astId": 40,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 42,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "groupName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 44,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "groupBuyInAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 46,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "groupCoordinator",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable"
          },
          {
            "astId": 48,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "groupBalance",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 50,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "groupActivationTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(GroupDonation)64_storage": {
        "encoding": "inplace",
        "label": "struct Esusu.GroupDonation",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "group",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Group)51_storage"
          },
          {
            "astId": 55,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "donationRound",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 57,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "donationStartTime",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 59,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "donationEndTime",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 61,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "latePaymentStartTime",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 63,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "latePaymentEndTime",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_struct(GroupMember)38_storage": {
        "encoding": "inplace",
        "label": "struct Esusu.GroupMember",
        "members": [
          {
            "astId": 28,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 30,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "nextPaymentDate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "nextPaymentAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "lastPaymentAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 37,
            "contract": "contracts/esusu.sol:Esusu",
            "label": "completedDonationRounds",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}